[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pdf-summarizer-ai"
version = "0.1.0"
description = "AI-powered PDF summarizer using Groq and LangChain"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["pdf", "summarizer", "ai", "langchain", "groq", "streamlit"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Text Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

[project.scripts]
pdf-summarizer = "main:main"
pdf-summarizer-ui = "main:main"
run-pdf-summarizer = "main:__main__"

[project.gui-scripts]
pdf-summarizer-gui = "streamlit run main.py"

[project.urls]
Homepage = "https://github.com/yourusername/pdf-summarizer-ai"
Repository = "https://github.com/yourusername/pdf-summarizer-ai"
Documentation = "https://github.com/yourusername/pdf-summarizer-ai#readme"
"Bug Tracker" = "https://github.com/yourusername/pdf-summarizer-ai/issues"

dependencies = [
    "streamlit>=1.28.0,<2.0.0",
    "langchain>=0.1.0,<1.0.0",
    "langchain-community>=0.0.20,<1.0.0",
    "langchain-groq>=0.1.0,<1.0.0",
    "langgraph>=0.0.40,<1.0.0",
    "PyMuPDF>=1.23.0,<2.0.0",
    "pypdf>=3.17.0,<4.0.0",
    "groq>=0.5.0,<1.0.0",
    "tiktoken>=0.5.0,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "reportlab>=4.0.0,<5.0.0",
    "nltk>=3.8.0,<4.0.0",
    "cryptography>=41.0.0,<45.0.0",
    "requests>=2.31.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<9.0.0",
    "pytest-cov>=4.1.0,<6.0.0",
    "black>=23.0.0,<25.0.0",
    "flake8>=6.0.0,<8.0.0",
    "mypy>=1.5.0,<2.0.0",
    "isort>=5.12.0,<6.0.0",
    "pre-commit>=3.3.0,<4.0.0",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
]